/**
 *  Take Out The Heat
 *
 *  Copyright 2016 Glenn Brockett
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 */
definition(
    name: "Take Out The Heat",
    namespace: "ac7ss",
    author: "Glenn Brockett",
    description: "Turn on fan when outside temperature is lower than inside.",
    category: "Green Living",
    iconUrl: "https://iconalone.com/sites/default/files/styles/frontx48x48/public/Fan.svg_0.png",
    iconX2Url: "http://downloadicons.net/sites/default/files/fan-icon-46129.png",
    iconX3Url: "http://downloadicons.net/sites/default/files/fan-icon-46129.png",
    oauth: true)


preferences {
	section("Turn on when temperature is within margin:") {
    	input "ThisSwitch","capability.switch", required: true
	}
    section("Inside temperature sensor:") {
    	input "InsideTemp", "capability.temperatureMeasurement", required: true
    }
    section ("Outside temperature sensor:") {
    	input "OutsideTemp", "capability.temperatureMeasurement", required: true
    }
    section ("Temperature difference:") {
    	input "Delta", "decimal", required: true
    }
    section ("Minimum indoor temperature:") {
    	input "MinimumTemp", "decimal", required: true
    }
    section([mobileOnly:true]) {
 		mode title: "Set for specific mode(s)", required: false
    }
}

def installed() {
	log.debug "Installed with settings: ${settings}"
	state.Inside = 65
    state.Outside = 65
	initialize()
}

def updated() {
	log.debug "Updated with settings: ${settings}"

	unsubscribe()
	initialize()
}

def initialize() {
	subscribe(InsideTemp, "temperature", myInsideHandler)
    subscribe(OutsideTemp, "temperature", myOutsideHandler)
}

// TODO: implement event handlers

def myInsideHandler(evt) {
	state.Inside=evt.doubleValue
    
    log.debug "Variables: " + state.Inside +" " + state.Outside + " " + Delta + " " + MinimumTemp
    
    if(state.Inside > MinimumTemp && state.Inside > (state.Outside+Delta) && "on" != ThisSwitch.currentSwitch ) {
		    	ThisSwitch.on()
    } else if ((state.Inside < MinimumTemp || state.Inside < (state.Outside+Delta)) && "off" != ThisSwitch.currentSwitch) {
    	ThisSwitch.off()
    }
}

def myOutsideHandler(evt) {
	state.Outside=evt.doubleValue
    
    log.debug "Variables: " + state.Inside +" " + state.Outside + " " + Delta + " " + MinimumTemp
    
    if(state.Inside > MinimumTemp && state.Inside > (state.Outside+Delta) && "on" != ThisSwitch.currentSwitch ) {
		    	ThisSwitch.on()
    } else if ((state.Inside < MinimumTemp || state.Inside < (state.Outside+Delta)) && "off" != ThisSwitch.currentSwitch) {
    	ThisSwitch.off()
    }
}
